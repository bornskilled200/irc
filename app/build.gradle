apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.hugo'
apply from : "gradle/checkstyle.gradle"
apply from : "gradle/findbugs.gradle"
apply from : "gradle/pmd.gradle"
apply plugin: 'jacoco'
apply plugin: 'spoon'

check.dependsOn 'checkstyle', 'findbugs', 'pmd'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.unseenspace.irc"
        minSdkVersion 8
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'LICENSE.txt'
    }
}

spoon {
    debug = true
    failOnFailure = false
    failIfNoDeviceConnected = false
    adbTimeout = 10*60
    excludedDevices = ['f5adb1a1', 'a6asb224']
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile 'com.android.support:recyclerview-v7:23.1.1'
    compile 'com.android.support:preference-v7:23.1.1'
    compile 'com.acappelli:TextDrawable:1.0'
    androidTestCompile 'com.android.support:support-annotations:23.1.1'

    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-SNAPSHOT'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-SNAPSHOT'

    compile 'org.pircbotx:pircbotx:2.1-SNAPSHOT'
    compile 'ch.qos.logback:logback-classic:1.1.3'

    compile 'com.madgag.spongycastle:core:1.53.0.0'

    androidTestCompile 'com.android.support.test:runner:0.4.1'
    // Set this dependency to use JUnit 4 rules
    androidTestCompile 'com.android.support.test:rules:0.4.1'
    // Set this dependency to build and run Espresso tests
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
    androidTestCompile ('com.android.support.test.espresso:espresso-contrib:2.2.1'){ exclude module: 'support-annotations' exclude module: 'support-v4' exclude module: 'support-v13' exclude module: 'recyclerview-v7' }
    androidTestCompile 'com.android.support.test.espresso:espresso-idling-resource:2.2.1'
    androidTestCompile 'com.squareup.spoon:spoon-client:1.2.1'
}

task jacocoTestReport(type: JacocoReport) {

    def coverageSourceDirs = [
            'src/main/java'
    ]

    group = "Reporting"
    description = "Generates Jacoco coverage reports"
    reports {
        xml{
            enabled = true
            destination "${buildDir}/reports/jacoco/jacoco.xml"
        }
        csv.enabled false
        html{
            enabled true
            destination "${buildDir}/jacocoHtml"
        }
    }

    classDirectories = fileTree(
            dir: 'build/intermediates/classes',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/BuildConfig.*',
                       '**/Manifest*.*',
                       '**/*Activity*.*',
                       '**/*Fragment*.*'
            ]
    )

    sourceDirectories = files(coverageSourceDirs)
    additionalSourceDirs = files(coverageSourceDirs)
    executionData = files('build/outputs/code-coverage/connected/flavors/smartcompanion/coverage.ec')
}